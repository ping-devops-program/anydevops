apiVersion: v1
kind: ServiceAccount
metadata:
  name: pd-backup-serviceaccount

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: pd-backup-role
rules:
  - apiGroups:
    - ""
    resources:
    - "pods"
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - "pods/exec"
    verbs:
    - create

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: pd-backup-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pd-backup-role
subjects:
  - kind: ServiceAccount
    name: pd-backup-serviceaccount

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pd-backup-pvc
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: pingdirectory-io1
  resources:
    requests:
      storage: 100Gi

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-script
data:
  backup.sh: |-
    #!/bin/sh
    set -e

    # This is the backup directory on ds-0
    SERVER_BACKUP_DIR=/opt/out/backup

    echo "Doing a full backup of userRoot backend to ${BACKUP_DIR}"
    /opt/server/bin/backup --task \
      --useSSL --trustAll \
      --hostname ds-0.pingdirectory \
      --port ${LDAPS_PORT} \
      --bindDN ${ROOT_USER_DN} \
      --bindPasswordFile ${ROOT_USER_PASSWORD_FILE} \
      --backupDirectory ${SERVER_BACKUP_DIR} \
      --backendID userRoot \
      --compress \
      --retainPreviousFullBackupAge 1d

    # FIXME: put kubectl in the image
    echo "Installing kubectl"
    curl https://storage.googleapis.com/kubernetes-release/release/v1.15.0/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl
    chmod +x /usr/local/bin/kubectl

    OLD_BACKUP_DIRS=$(find ${BACKUP_DIR} -name backup-\* -type d)
    echo "Old backup directories: ${OLD_BACKUP_DIRS}"

    NEW_BACKUP_DIR=${BACKUP_DIR}/backup-$(date +%Y%m%d_%H%M%S)
    mkdir -p ${NEW_BACKUP_DIR}

    echo "Copying backup from ds-0:${SERVER_BACKUP_DIR} to ${NEW_BACKUP_DIR}"
    kubectl cp ds-0:${SERVER_BACKUP_DIR} ${NEW_BACKUP_DIR}

    echo "Changing current backup to point to ${NEW_BACKUP_DIR}"
    CURRENT_BACKUP_DIR=${BACKUP_DIR}/current
    ln -snf ${NEW_BACKUP_DIR} ${CURRENT_BACKUP_DIR}

    echo "Removing old backup directories: ${OLD_BACKUP_DIRS}"
    echo ${OLD_BACKUP_DIRS} | xargs rm -rf

    echo "Backup directory contents:"
    ls -latr ${BACKUP_DIR}

    echo "Current backup contents:"
    ls ${CURRENT_BACKUP_DIR}

---

# Do a full backup of the userRoot backend every 6 hours and retain the backups
# for a day. This goes into a separate persistent volume than the data attached
# to each pingdirectory server.

# A manual restore can be performed using the restore job (restore.yaml) when
# necessary.
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: ds-periodic-backup
spec:
  schedule: "* */6 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccount: pd-backup-serviceaccount
          restartPolicy: OnFailure
          containers:
          - name: ds-backup
            image: pingidentity/pingdirectory:edge
            command:
            - /opt/in/backup.sh
            env:
            - name: BACKUP_DIR
              value: /pd_backups
            volumeMounts:
            - name: passwords
              mountPath: /usr/local/secrets
              readOnly: true
            - name: backup-volume
              mountPath: /pd_backups
            - name: backup-script
              mountPath: /opt/in
          volumes:
          - name: passwords
            secret:
              secretName: passwords
              defaultMode: 256
          - name: backup-script
            configMap:
              name: backup-script
              defaultMode: 0777
          - name: backup-volume
            persistentVolumeClaim:
              claimName: pd-backup-pvc