apiVersion: v1
kind: Namespace
metadata:
  name: anydevops
---
apiVersion: v1
kind: Namespace
metadata:
  name: external-dns
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  labels:
    role: pingdirectory
  name: pingdirectory-gp2
mountOptions:
- discard
parameters:
  fsType: ext4
  type: gp2
provisioner: kubernetes.io/aws-ebs
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: default
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/role: ingress-nginx-public1
  name: nginx-ingress-serviceaccount
  namespace: ingress-nginx-public1
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/role: ingress-nginx-public1
  name: nginx-ingress-role
  namespace: ingress-nginx-public1
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resourceNames:
  - ingress-controller-leader-nginx
  resources:
  - configmaps
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: external-dns
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/role: ingress-nginx-public1
  name: nginx-ingress-clusterrole-public
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  verbs:
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/role: ingress-nginx-public1
  name: nginx-ingress-role-nisa-binding
  namespace: ingress-nginx-public1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-ingress-role
subjects:
- kind: ServiceAccount
  name: nginx-ingress-serviceaccount
  namespace: ingress-nginx-public1
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/role: ingress-nginx-public1
  name: nginx-ingress-clusterrole-nisa-binding-public
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-clusterrole-public
subjects:
- kind: ServiceAccount
  name: nginx-ingress-serviceaccount
  namespace: ingress-nginx-public1
---
apiVersion: v1
data:
  ORCHESTRATION_TYPE: kubernetes
  PING_IDENTITY_DEVOPS_KEY: 273b82bc-5d25-4a43-a163-099f313564ea
  PING_IDENTITY_DEVOPS_USER: samirgandhi@pingidentity.com
  SERVER_PROFILE_PATH: baseline/pingaccess
  SERVER_PROFILE_URL: https://www.github.com/pingidentity/pingidentity-server-profiles.git
kind: ConfigMap
metadata:
  labels:
    role: pingaccess
  name: pingaccess-environment-variables-dh44b7ddmg
  namespace: anydevops
---
apiVersion: v1
data:
  ORCHESTRATION_TYPE: kubernetes
  PING_IDENTITY_DEVOPS_KEY: 273b82bc-5d25-4a43-a163-099f313564ea
  PING_IDENTITY_DEVOPS_USER: samirgandhi@pingidentity.com
kind: ConfigMap
metadata:
  labels:
    role: pingdataconsole
  name: pingdataconsole-environment-variables-5dc7ggtcdb
  namespace: anydevops
---
apiVersion: v1
data:
  LOCATION: Denver
  MAX_HEAP_SIZE: 4g
  ORCHESTRATION_TYPE: kubernetes
  PING_IDENTITY_DEVOPS_KEY: 273b82bc-5d25-4a43-a163-099f313564ea
  PING_IDENTITY_DEVOPS_USER: samirgandhi@pingidentity.com
  SERVER_PROFILE_PATH: baseline/pingdirectory
  SERVER_PROFILE_URL: https://www.github.com/pingidentity/pingidentity-server-profiles.git
  USER_BASE_DN: dc=example,dc=com
kind: ConfigMap
metadata:
  labels:
    role: pingdirectory
  name: pingdirectory-environment-variables-8t725d72gg
  namespace: anydevops
---
apiVersion: v1
data:
  ORCHESTRATION_TYPE: kubernetes
  PING_IDENTITY_DEVOPS_KEY: 273b82bc-5d25-4a43-a163-099f313564ea
  PING_IDENTITY_DEVOPS_USER: samirgandhi@pingidentity.com
  SERVER_PROFILE_PATH: baseline/pingfederate
  SERVER_PROFILE_URL: https://www.github.com/pingidentity/pingidentity-server-profiles.git
kind: ConfigMap
metadata:
  labels:
    role: pingfederate
  name: pingfederate-environment-variables-4tk5m2424f
  namespace: anydevops
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/role: ingress-nginx-public1
  name: nginx-configuration
  namespace: ingress-nginx-public1
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/role: ingress-nginx-public1
  name: tcp-services
  namespace: ingress-nginx-public1
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/role: ingress-nginx-public1
  name: udp-services
  namespace: ingress-nginx-public1
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: anydevops
stringData:
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    MIIC+DCCAeCgAwIBAgIJAJdLpmvIONuYMA0GCSqGSIb3DQEBCwUAMCUxIzAhBgNV
    BAMMGmVrcy1wb2MuYXUxLnBpbmctbGFiLmNsb3VkMB4XDTE5MDkwNDIwNTk0OVoX
    DTI5MDkwMTIwNTk0OVowJTEjMCEGA1UEAwwaZWtzLXBvYy5hdTEucGluZy1sYWIu
    Y2xvdWQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDATjdo71gI/HYE
    tFKTzqp19pG8F8WzSTtyNQ5cn8+hCx2uQZ3ep9LjwieTWd9xjRXtnO03o4Mc5Zez
    uUTJAlFmosLSQw+pdexJYkNMEri7D1wPRjztHG8Ei/uAyY7IL59qIB2efGU1a2Po
    h+2SrHQUZyRkFpnAtZ9ZxRE4AXagtwuFEPUxubr9bP177a5Cm3CdiDOn1bC78ntD
    BN/w/gaOvjVGjAjwRr7YjC9Hke6Nnlrbjiq5eUCCD5UXB0e2CP16tXljErAETQkB
    tYkEvwIL95SidDnbDqEMVsZJ8WERABUIFjkyN3mwWZcCFYaqewoORZs7/DJbeIN6
    EGpm3RnRAgMBAAGjKzApMCcGA1UdEQQgMB6CHCouZWtzLXBvYy5hdTEucGluZy1s
    YWIuY2xvdWQwDQYJKoZIhvcNAQELBQADggEBAAAZaHXi0A7HsMsMw338F5x7thos
    w+xrXRChc6u9Hj8sOXUoIFLDHOBAYakUlbmLqP6LItqcAFzp+wWx3dnZ+xvjB6eh
    MqwqNPsNF3+NOQSqZ6vvBf8UdY5MyPnxL5/QERY54oeitehw83G0YtY2eUGR6db9
    jSB6jNC0qhuLq/COHqvHtLOhcnfrDNJkGlVBYwu5dmH8UTULWeNUYH1+lFidDsCG
    9fBbmk0EdJKIDE1a18D5RBJi4cNawC77y2ch9ZNEqqECBBDAfUQy8IMPWzy5+GHm
    N5PgkG2+ndkxlPiTi24KT4RPXg+MhYzBQRXQu/virx5+mcYc9FH8BTU4ZcU=
    -----END CERTIFICATE-----
  tls.key: |
    -----BEGIN PRIVATE KEY-----
    MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDATjdo71gI/HYE
    tFKTzqp19pG8F8WzSTtyNQ5cn8+hCx2uQZ3ep9LjwieTWd9xjRXtnO03o4Mc5Zez
    uUTJAlFmosLSQw+pdexJYkNMEri7D1wPRjztHG8Ei/uAyY7IL59qIB2efGU1a2Po
    h+2SrHQUZyRkFpnAtZ9ZxRE4AXagtwuFEPUxubr9bP177a5Cm3CdiDOn1bC78ntD
    BN/w/gaOvjVGjAjwRr7YjC9Hke6Nnlrbjiq5eUCCD5UXB0e2CP16tXljErAETQkB
    tYkEvwIL95SidDnbDqEMVsZJ8WERABUIFjkyN3mwWZcCFYaqewoORZs7/DJbeIN6
    EGpm3RnRAgMBAAECggEATKfhFocxxIM+WCm5MQoUkOk0tpGTUSBD/gaALxPVJBDW
    R/wH/hVPz1I5jFcq5oyizRDczmzzerVaf12+uZGe+RawKjhpKdfD1IzC3rQnxwkc
    XUpWRv4qktlp67Bspge1uAwNQnu7rEuei7aDURBFRUzICM2phFPhrVsMvhJ3QyCC
    793mnYCJy/ZDvPqM5L2Zx46EZ8tnRDj+m3kfjtWnpJ6ea4DQzDbkceIUnpCZc9Yk
    CkrND59LU9HemUZlEGfFS+DJ2BYI325cPgPGIJ7epr/VCX9xwY8IHhEClJHt96qx
    qm/Dq3DnRsmf13qJsaCvkq8LAvgFwnYYQOSzE/xlQQKBgQDpGOkelCOqseQyeZ7X
    oOGbTQ27Jtf48XXDn697zr53lguo+4A7W4sboAF1dOAa40cpdfGs6D1t6cZtZ5WR
    9xIefXBMLlrybJ5qdR0fUNIgu8sPB2fsv5HVfwx3Q9sTUp6m4HPRyczvV+jF1BAH
    aThw2n98iKddiOGrtiL+GZslpQKBgQDTM0WGnnTy0EHPF84YS3dyaES7KA2uOvtg
    YSGe2jDp2T0fB0fj39a3enyhH0ZixZZDYmiPlt1n3kf0lHdo7iZwus9K1K9Dtmus
    Q8QT5S/gRzZm3JTzm/hAWafoCTfK9u+0bNftZK/QtVSRqzINqI/YZSMomQoI+GqZ
    69xLQF3jvQKBgDApYnlb+GabbN/0+xnodtTkvdKOew9HrKJnyxVUqUwCJ5SZqmwZ
    RQvHKqX/KRLFJP3vDalBLvgX1lTikyfemdLM7jf/V/FA+hZa7lJ7G3+B7bnEOPfU
    uSgYoRW/YnOCnZ8zPxr4jCxjyIefglRVrEC9FJxBi/sqfh5BesdvuPu1AoGBANHW
    TSu1YAin9dqmkjP9Nw5Kno88+mqzW3KkztyfeJ2/I0Ui3MCBczoUzqLfCfW0ztjg
    e3a+s/gxF1jf8cwlYbf7Q13b9s7V/iDHq5cAzRKObnTAkJWBz6NP8M1P60kTE5I1
    2kuZED3TC9U3PKHpahHcWpRJiXjkKDYJ63Qw3ZgZAoGADmZ8b/+XyQ8QyyIRUgpJ
    mu+pBXD/V0xzCZSjc0tPXfKJhAMl96aM8L25a3xtEorI+iv79YxX5cjWS31fs9Az
    yMnOStMT1CCFAK9NgrQd8QgATlho+CdbQ39/TKERMJskaym8dHeJHMdh/j7b+ZUb
    dVNIj646N1ovE+dxS/6JrGY=
    -----END PRIVATE KEY-----
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingaccess
  name: pingaccess
  namespace: anydevops
spec:
  ports:
  - name: pa-runtime
    port: 443
  selector:
    role: pingaccess
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingaccess
  name: pingaccess-admin
  namespace: anydevops
spec:
  ports:
  - name: pa-admin
    port: 9000
  selector:
    role: pingaccess
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingdataconsole
  name: pingdataconsole
  namespace: anydevops
spec:
  ports:
  - name: http
    port: 8080
  selector:
    role: pingdataconsole
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingdirectory
  name: pingdirectory
  namespace: anydevops
spec:
  clusterIP: None
  ports:
  - name: ldap
    port: 389
  - name: ldaps
    port: 636
  - name: https
    port: 8443
  selector:
    role: pingdirectory
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingfederate
  name: pingfederate
  namespace: anydevops
spec:
  ports:
  - name: pf-runtime
    port: 9031
  selector:
    role: pingfederate
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingfederate
  name: pingfederate-admin
  namespace: anydevops
spec:
  ports:
  - name: pf-admin
    port: 9999
  selector:
    role: pingfederate
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:574076504146:certificate/31fdd86d-291d-40ea-abad-2117cfde02d0
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/role: ingress-nginx-public1
  name: ingress-nginx
  namespace: ingress-nginx-public1
spec:
  ports:
  - name: http
    port: 80
    targetPort: http
  - name: https
    port: 443
    targetPort: http
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/role: ingress-nginx-public1
  spec: null
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: pingaccess
  name: pingaccess
  namespace: anydevops
spec:
  replicas: 1
  selector:
    matchLabels:
      role: pingaccess
  template:
    metadata:
      annotations:
        lastUpdateTime: NA
      labels:
        role: pingaccess
      name: pingaccess
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: pingaccess-environment-variables-dh44b7ddmg
        image: pingidentity/pingaccess:edge
        imagePullPolicy: Always
        name: pingaccess
        ports:
        - containerPort: 9000
          name: pa-admin
        - containerPort: 443
          name: pa-runtime
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: pingdataconsole
  name: pingdataconsole
  namespace: anydevops
spec:
  replicas: 1
  selector:
    matchLabels:
      role: pingdataconsole
  template:
    metadata:
      annotations:
        lastUpdateTime: NA
      labels:
        role: pingdataconsole
      name: pingdataconsole
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: pingdataconsole-environment-variables-5dc7ggtcdb
        image: pingidentity/pingdataconsole:edge
        name: pingdataconsole
        ports:
        - containerPort: 8080
          name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: pingfederate
  name: pingfederate
  namespace: anydevops
spec:
  replicas: 1
  selector:
    matchLabels:
      role: pingfederate
  template:
    metadata:
      annotations:
        lastUpdateTime: NA
      labels:
        role: pingfederate
      name: pingfederate
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: pingfederate-environment-variables-4tk5m2424f
        image: pingidentity/pingfederate:9.3.0-edge
        imagePullPolicy: Always
        name: pingfederate
        ports:
        - containerPort: 9999
          name: pf-admin
        - containerPort: 9031
          name: pf-runtime
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/role: ingress-nginx-public1
  name: nginx-ingress-controller
  namespace: ingress-nginx-public1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/role: ingress-nginx-public1
  template:
    metadata:
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
        app.kubernetes.io/role: ingress-nginx-public1
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --configmap=$(POD_NAMESPACE)/nginx-configuration
        - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
        - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
        - --publish-service=$(POD_NAMESPACE)/ingress-nginx
        - --annotations-prefix=nginx.ingress.kubernetes.io
        - --ingress-class=nginx-public
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.25.1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: nginx-ingress-controller
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 33
      serviceAccountName: nginx-ingress-serviceaccount
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: external-dns
  namespace: default
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      containers:
      - args:
        - --source=service
        - --source=ingress
        - --log-level=debug
        - --provider=aws
        - --policy=upsert-only
        - --aws-zone-type=public
        - --registry=txt
        image: registry.opensource.zalan.do/teapot/external-dns:latest
        name: external-dns
      serviceAccountName: external-dns
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    role: pingdirectory
  name: ds
  namespace: anydevops
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      role: pingdirectory
  serviceName: pingdirectory
  template:
    metadata:
      annotations:
        lastUpdateTime: NA
      labels:
        role: pingdirectory
    spec:
      containers:
      - env:
        - name: K8S_STATEFUL_SET_NAME
          value: ds
        - name: K8S_STATEFUL_SET_SERVICE_NAME
          value: pingdirectory
        - name: MAX_HEAP_SIZE
          value: 8g
        - name: UNBOUNDID_JAVA_ARGS
          value: -client -Xmx8g -Xms8g
        envFrom:
        - configMapRef:
            name: pingdirectory-environment-variables-8t725d72gg
        image: pingidentity/pingdirectory:edge
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command:
              - /opt/staging/hooks/90-shutdown-sequence.sh
        livenessProbe:
          exec:
            command:
            - liveness.sh
          failureThreshold: 10
          initialDelaySeconds: 600
          periodSeconds: 30
        name: ds
        ports:
        - containerPort: 389
          name: ldap
        - containerPort: 636
          name: ldaps
        - containerPort: 8443
          name: https
        readinessProbe:
          exec:
            command:
            - liveness.sh
          failureThreshold: 120
          periodSeconds: 30
        resources:
          limits:
            cpu: "2"
            memory: 8Gi
          requests:
            cpu: "2"
            memory: 8Gi
        volumeMounts:
        - mountPath: /opt/out
          name: out-dir
      terminationGracePeriodSeconds: 300
      volumes:
      - name: out-dir
        persistentVolumeClaim:
          claimName: out-dir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        role: pingdirectory
      name: out-dir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
      storageClassName: pingdirectory-gp2
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx-public
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/enable-cors: "true"
  labels:
    role: pingaccess
  name: pingaccess
  namespace: anydevops
spec:
  rules:
  - host: pingaccess.anydevops.com
    http:
      paths:
      - backend:
          serviceName: pingaccess
          servicePort: 443
        path: /
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/rewrite-target: /console
    kubernetes.io/ingress.class: nginx-public
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/enable-cors: "true"
  labels:
    role: pingaccess
  name: pingaccess-admin
  namespace: anydevops
spec:
  rules:
  - host: pingaccess-admin.anydevops.com
    http:
      paths:
      - backend:
          serviceName: pingaccess-admin
          servicePort: 9000
        path: /
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx-public
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
  labels:
    role: pingdataconsole
  name: pingdataconsole
  namespace: anydevops
spec:
  rules:
  - host: pingdataconsole.anydevops.com
    http:
      paths:
      - backend:
          serviceName: pingdataconsole
          servicePort: 8080
        path: /console
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx-public
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
  labels:
    role: pingfederate
  name: pingfederate-admin
  namespace: anydevops
spec:
  rules:
  - host: pingfederate-admin.anydevops.com
    http:
      paths:
      - backend:
          serviceName: pingfederate-admin
          servicePort: 9999
        path: /
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx-public
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
  labels:
    role: pingfederate
  name: pingfederate-ingress
  namespace: anydevops
spec:
  rules:
  - host: pingfederate.anydevops.com
    http:
      paths:
      - backend:
          serviceName: pingfederate
          servicePort: 9031
        path: /
